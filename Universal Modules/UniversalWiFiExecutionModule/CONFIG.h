#pragma once
#include <Arduino.h>
//--------------------------------------------------------------------------------------------------------------------------------------
// настройки прошивки
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#define _DEBUG // закомментировать для выключения отладочного режима (плюётся в Serial отладочной информацией на скорости 57600)
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#define BROADCAST_PORT 8888 // порт для приема широковещательных пакетов
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// настройки коннекта по умолчанию. Параметры доступа к роутеру можно также установить путём отправки в UART строки SET=ROUTER|id|pass\r\n, где id = адрес точки доступа
// контроллера, pass - пароль к точке доступа, \r\n - символы перевода строки
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#define CONTROLLER_SSID "TEPLICA" // имя сети Wi-Fi
#define CONTROLLER_PASSWORD "12345678" // пароль к сети Wi-Fi
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#define CONNECT_TIMEOUT 30000 // таймаут коннекта, мс
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#define POWER_ON_LEVEL HIGH // уровень включения нагрузки на слоте
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#define NO_BINDING -1 // константа, означающая "нет привязки" для слота
#define WINDOW 1 // константа, означающая привязку к окну для слота
#define LEFT_CHANNEL 2 // константа, означающая привязку к левому каналу окна для слота
#define RIGHT_CHANNEL 3 // константа, означающая привязку к правому каналу окна для слота
#define WATER 4 // константа, означающая привязку к каналу полива для слота
#define LIGHT 5 // константа, означающая привязку к каналу досветки для слота
#define VPIN  6 // константа, означающая привязку к виртуальному пину для слота
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// настройки слотов привязки к состоянию контроллера (8 штук)
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
/*
 каждый слот - описывается в виде структуры. Ниже приведены все возможные настройки слотов с комментариями.
 в общем случае - настройка слота выглядит так:
 {
  D5, // номер физического пина ESP, куда будет отображаться состояние контроллера
  WINDOW, // тип привязки (WINDOW - к окну, WATER - к каналу полива, LIGHT - к каналу досветки, VPIN - к виртуальному пину, NO_BINDING - нет привязки
  LEFT_CHANNEL, // дополнительный параметр: в случае типа привязки WINDOW - левый или правый канал окна (LEFT_CHANNEL или RIGHT_CHANNEL), в остальных случаях - 0
  2, // номер состояния в контроллере: для окна - номер окна, для каналов полива и досветки - канал полива или досветки, для виртуального пина - номер пина 
 }
 */

//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// определяем настройки слотов
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#define SLOTS \
{ D1, WINDOW, LEFT_CHANNEL, 0 },            /* привязка к первому окну, левый канал */ \
{ D2, WINDOW, RIGHT_CHANNEL, 0 },           /* привязка к первому окну, правый канал */ \
{ D3, WATER, 0, 1 },                        /* привязка ко второму каналу полива */ \
{ D4, LIGHT, 0, 4 },                        /* привязка к пятому каналу досветки */ \
{ D5, VPIN, 0, 100 },                       /* привязка к виртуальному пину номер 100 */ \
{ D6, NO_BINDING, 0, 0 },                   /* нет привязки */ \
{ D7, NO_BINDING, 0, 0 },                   /* нет привязки */ \
{ D8, NO_BINDING, 0, 0 }                   /* нет привязки */ \

 
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// дальше лазить - неосмотрительно :)
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// ||
// \/
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#pragma pack(push,1)
typedef struct
{
  uint32_t WindowsState; // состояние каналов окон, 4 байта = 32 бита = 16 окон)
  uint16_t WaterChannelsState; // состояние каналов полива, 2 байта, (16 каналов)
  uint8_t LightChannelsState; // состояние каналов досветки, 1 байт (8 каналов)
  uint8_t PinsState[16]; // состояние пинов, 16 байт, 128 пинов
  
} ControllerState; // состояние контроллера
#pragma pack(pop)
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#pragma pack(push,1)
struct SlotSettings
{
  uint8_t pin;
  int8_t type;
  uint8_t param;
  uint8_t link;

  SlotSettings()
  {
    type = NO_BINDING;
  }

  SlotSettings(uint8_t p, int8_t t, uint8_t pa, uint8_t l)
  {
    pin = p;
    type = t;
    param = pa;
    link = l;
  }
};
#pragma pack(pop)
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------

